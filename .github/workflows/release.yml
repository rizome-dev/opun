name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  validate-tag:
    name: Validate Tag
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Validate semantic version
      run: |
        if [[ ! "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
          echo "Invalid version tag format. Expected: vX.Y.Z or vX.Y.Z-suffix"
          exit 1
        fi

  release:
    name: GoReleaser
    runs-on: ubuntu-latest
    needs: validate-tag
    env:
      HOMEBREW_TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Check if prerelease
      id: check-prerelease
      run: |
        TAG="${{ github.ref_name }}"
        if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+-[a-zA-Z0-9]+.*$ ]]; then
          echo "is_prerelease=true" >> $GITHUB_OUTPUT
          echo "config_file=.goreleaser.nightly.yml" >> $GITHUB_OUTPUT
          echo "Detected prerelease tag: $TAG"
        else
          echo "is_prerelease=false" >> $GITHUB_OUTPUT
          echo "config_file=.goreleaser.yml" >> $GITHUB_OUTPUT
          echo "Detected stable tag: $TAG"
        fi

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean --config ${{ steps.check-prerelease.outputs.config_file }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HOMEBREW_TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}